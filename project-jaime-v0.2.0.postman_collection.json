{
	"info": {
		"_postman_id": "48ddf3f5-9291-4a47-a13b-67aa3bedc06c",
		"name": "project-jaime-v0.2.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "agents",
							"item": [
								{
									"name": "list",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/agents",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"agents"
											]
										}
									},
									"response": []
								},
								{
									"name": "all short",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/agents/all/short",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"agents",
												"all",
												"short"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/agents/:id",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"agents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "825c2803ec30"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "works",
							"item": [
								{
									"name": "list",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/works",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works"
											]
										}
									},
									"response": []
								},
								{
									"name": "get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/works/:id",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "70f7d9d65d71"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "exec",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "name: \"asi se hace\"\nmodule: test\nagent:\n    type: OPENSHIFT\nservers:\n  from:\n    name: lasegunda\n    namespace: msdesa\n    object: configmaps"
										},
										"url": {
											"raw": "{{project-jaime}}/api/v1/works/",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "exec migrate",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "module: migrate_object\nagent:\n    type: oc\nservers:\n  from:\n    name: lasegunda\n    namespace: msdesa\n    object: bc\n    only:\n      - \".*-pipeline-develop\"\n  to:\n    name: jaime\n    namespace: msdesa"
										},
										"url": {
											"raw": "{{project-jaime}}/api/v1/works/",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "exec Jenkins",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "module: install_jenkins\nagent:\n  type: oc\nserver:\n  name: jaime\n  namespace: jenkins\njenkins:\n  image:\n    url: registry.redhat.io/openshift4/ose-jenkins\n    tag: 4.8.0\n  imageStream:\n    namespace: jenkins\n    name: oce-jenkins\n    tag: 4.8.0\n  config:\n    template: jenkins-persistent\n    memoryRAM: 4Gi\n    memoryVolume: 4Gi\n    storageClass: gp2\n"
										},
										"url": {
											"raw": "{{project-jaime}}/api/v1/works/",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "logs",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/works/:id/logs",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works",
												":id",
												"logs"
											],
											"variable": [
												{
													"key": "id",
													"value": "26d1f5480662"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/works/:id",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "9cbf9cf7df30"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "download workspace",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/works/:id/workspace",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"works",
												":id",
												"workspace"
											],
											"variable": [
												{
													"key": "id",
													"value": "26d1f5480662"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "servers",
							"item": [
								{
									"name": "list",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/servers",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"servers"
											]
										}
									},
									"response": []
								},
								{
									"name": "get all short",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/servers/all/short",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"servers",
												"all",
												"short"
											]
										}
									},
									"response": []
								},
								{
									"name": "get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/servers/:name",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"servers",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "lasegunda"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/servers/:name",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"servers",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "lasegunda4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "post",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"lasegunda\",\n    \"url\": \"https://api.ocp01-noprod.ocplasegunda.com.ar:6443\",\n    \"token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6InpJZDZMSzRxVXJvRkJLMVdCb2FEclFJTWZubXdIaXVqbGIzVl9xbkdWbDAifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJmcm9udC1kZXNhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtZnJvbnQtYnVpbGRlci10b2tlbi0ycGRnaCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJqZW5raW5zLWZyb250LWJ1aWxkZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIxNWYzN2U2Ny03NGViLTRlYzgtOTliNi05Y2U5M2YxNzFjNjYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZnJvbnQtZGVzYTpqZW5raW5zLWZyb250LWJ1aWxkZXIifQ.GTCm9Vyabx2MNLpibzAxRRch-Cj7eJzbdG-b4knbjD2zKkDyLtRMcM92oOIa7XVA-vEIjAANsMOmiJ4nM7VwBxvqCmOY9B1Kg9ZKYc46OY6RLmMupr3dg8LRelb0UgKDX_Ln5o6XVyAzn8wtTwSUBWfwGzQzLX3G2EHWSwdvEAkI1bgEzulzVS-1t8Y1XmV3OBiDQN8u7iRml-NgSjpDvxfaK6Kin1Rvz5z8naC_cO6IE1SNQR-e7cp4cwhGB_J6rzOpGQoQNSPRpALPwipWEnzds3kr-WjqIXGE1J2QVGBWw89gODeCY6U0F9E9MuhN6O9gcsyu8R2AiAteFgk6LQ\",\n    \"version\": \"4.6\",\n    \"type\": \"OPENSHIFT\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{project-jaime}}/api/v1/servers/",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "post jaime",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"jaime\",\n    \"url\": \"https://api.cluster-7nv9j.7nv9j.sandbox1538.opentlc.com:6443\",\n    \"token\": \"sha256~cGUEHuuOPARrFFVBjyu5Nle0TRNoxk-F3DZl6cWOThg\",\n    \"version\": \"4.7\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{project-jaime}}/api/v1/servers/",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"servers",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "modules",
							"item": [
								{
									"name": "list",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/modules",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"modules"
											]
										}
									},
									"response": []
								},
								{
									"name": "get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/modules/:module",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"modules",
												":module"
											],
											"variable": [
												{
													"key": "module",
													"value": "test"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/modules/migrate_object",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"modules",
												"migrate_object"
											]
										}
									},
									"response": []
								},
								{
									"name": "post",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "import logging\nimport os\nimport re\nfrom typing import Dict\n\nimport yaml\nimport tools\n\n\nwith open('params.yaml', 'r') as f:\n    params = yaml.load(f.read(), Loader=yaml.FullLoader)\n\nserver_from = params['servers']['from']['name']\nnamespace_from = params['servers']['from']['namespace']\nobject_from = params['servers']['from']['object']\nonly_from = params['servers']['from'].get('only', [])\nignore_from = params['servers']['from'].get('ignore', [])\n\nserver_to = params['servers']['to']['name']\nnamespace_to = params['servers']['to']['namespace']\nmethod_to = params['servers']['to'].get('method', 'apply')\n\noc_from = tools.get_oc(server_from)\noc_from.login()\n\nprint(f\"{server_from} -> Obtieniendo todos los objetos\")\nobjects_to_migrate = [\n    ob\n    for ob\n    in oc_from.exec(f'get {object_from} -n {namespace_from} -o custom-columns=NAME:.metadata.name').split('\\n')[1:-1]\n]\nprint(f\"{server_from} -> Objetos entontrados: {len(objects_to_migrate)}\")\n\ntools.sh('mkdir yamls/')\n\nfor ob in objects_to_migrate:\n\n    if only_from:\n        match_all_regex = len(\n            [regex for regex in only_from if re.match(regex, ob)]) == len(only_from)\n        if not match_all_regex:\n            continue\n\n    if ignore_from:\n        match_any_regex = any(\n            True for regex in ignore_from if re.match(regex, ob))\n        if match_any_regex:\n            continue\n\n    print(f'{server_from} -> Obteniendo {ob}')\n    oc_from.exec(\n        f'get {object_from} {ob} -n {namespace_from} -o yaml > yamls/{ob}.yaml')\n\noc_to = tools.get_oc(server_to)\noc_to.login()\n\noc_to.exec(f'new-project {namespace_to}')\n\nyamls_to_migrate = []\nfor _, _, file_name in os.walk('yamls/'):\n    yamls_to_migrate.extend(file_name)\nprint(f'{server_to} -> Por migrar {len(yamls_to_migrate)} {object_from}')\n\nyamls_errors = []\nfor yaml_to_migrate in yamls_to_migrate:\n    try:\n        with open(f'yamls/{yaml_to_migrate}', 'r') as file:\n            dic_yaml = yaml.load(file, Loader=yaml.FullLoader)\n\n        dic_yaml['metadata'].pop('creationTimestamp', None)\n        dic_yaml['metadata'].pop('namespace', None)\n        dic_yaml['metadata'].pop('resourceVersion', None)\n        dic_yaml['metadata'].pop('selfLink', None)\n        dic_yaml['metadata'].pop('uid', None)\n        dic_yaml.pop('status', None)\n\n        yaml_to_apply = yaml.dump(dic_yaml, default_flow_style=False)\n        with open(f'yamls/{yaml_to_migrate}', 'w') as f:\n            f.write(yaml_to_apply)\n\n        oc_to.exec(f'{method_to} -n {namespace_to} -f yamls/{yaml_to_migrate}')\n        print(f'{server_to} -> Migrado {yaml_to_migrate}')\n\n    except Exception as e:\n        logging.exception(e)\n        logging.error(f'{server_to} -> ERROR al migrar {yaml_to_migrate}')\n\n        yamls_errors.append(yaml_to_migrate)\n        print(e.args)\n\nif yamls_errors:\n    logging.error(f'{server_to} -> Yamls con errores al migrar:')\n    for y_error in yamls_errors:\n        logging.error(\n            f'{server_to} -> {y_error}')\n",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{project-jaime}}/api/v1/modules/:name",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"modules",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "migrate_object"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "docs",
							"item": [
								{
									"name": "list",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/docs",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"docs"
											]
										}
									},
									"response": []
								},
								{
									"name": "get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/docs/:docs",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"docs",
												":docs"
											],
											"variable": [
												{
													"key": "docs",
													"value": "test"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{project-jaime}}/api/v1/docs/:doc",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"docs",
												":doc"
											],
											"variable": [
												{
													"key": "doc",
													"value": "test"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "post",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "module: test\nagent:\n    type: oc\nservers:\n  from:\n    name: <server name>\n    namespace: <namespace>\n    object: <openshift object type [svc, pod, bc, dc, secret, etc]>",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{project-jaime}}/api/v1/docs/:name",
											"host": [
												"{{project-jaime}}"
											],
											"path": [
												"api",
												"v1",
												"docs",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "test"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "app",
			"item": [
				{
					"name": "alive",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{project-jaime}}",
							"host": [
								"{{project-jaime}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "vars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{project-jaime}}/vars",
							"host": [
								"{{project-jaime}}"
							],
							"path": [
								"vars"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "project-jaime",
			"value": "http://localhost:5000"
		}
	]
}